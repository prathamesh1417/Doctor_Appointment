// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication7.Models;

#nullable disable

namespace WebApplication7.Migrations
{
    [DbContext(typeof(Patient_DBContext))]
    partial class Patient_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication7.Models.Booki", b =>
                {
                    b.Property<int>("aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aid"));

                    b.Property<string>("DoctorName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_Name");

                    b.Property<int>("did")
                        .HasColumnType("int");

                    b.Property<string>("paadhar")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Patient_Aadhar");

                    b.Property<string>("padd")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Patient_Address");

                    b.Property<string>("pdate")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Date");

                    b.Property<string>("pmob")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Patient_mobileNo");

                    b.Property<string>("pmsg")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Patient_Message");

                    b.Property<string>("pname")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("aid");

                    b.HasIndex("did");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("WebApplication7.Models.LoginCredential", b =>
                {
                    b.Property<int>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoginId"));

                    b.Property<string>("CPassword")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Confirm Password");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Username");

                    b.HasKey("LoginId");

                    b.ToTable("LoginCredential");
                });

            modelBuilder.Entity("WebApplication7.Models.doct", b =>
                {
                    b.Property<int>("did")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("did"));

                    b.Property<string>("Certi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CertificateID")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_Certificate");

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("dcpass")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_CPASS");

                    b.Property<string>("demail")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_Email");

                    b.Property<string>("dname")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_Username");

                    b.Property<string>("dpass")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Doctor_Pass");

                    b.HasKey("did");

                    b.ToTable("Doct");
                });

            modelBuilder.Entity("WebApplication7.Models.Booki", b =>
                {
                    b.HasOne("WebApplication7.Models.doct", "doc")
                        .WithMany("book")
                        .HasForeignKey("did")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("doc");
                });

            modelBuilder.Entity("WebApplication7.Models.doct", b =>
                {
                    b.Navigation("book");
                });
#pragma warning restore 612, 618
        }
    }
}
